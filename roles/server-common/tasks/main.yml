- file: state=directory recurse=yes path=/etc/ansible/facts.d mode=0600

- stat: path={{cider_ci_local_facts_file}}
  register: cider_ci_secrets_file_stats

- randstring:
  register: secret 
  when: not cider_ci_secrets_file_stats.stat.exists

- template: src=cider_ci.json
            dest={{cider_ci_local_facts_file}}
  when: not cider_ci_secrets_file_stats.stat.exists

- setup: filter=ansible_local
  when: not cider_ci_secrets_file_stats.stat.exists

#- debug: msg='{{ansible_local}}'



### UI-user ###################################################################

- name: Add the group "user-interface"
  group:  name=user-interface
          system=true

- name: Add the user "user-interface"
  user: name=user-interface
        generate_ssh_key=yes
        group=user-interface
        system=yes
        shell=/bin/bash


### Repositories ##############################################################


- group:  name=repository-manager
          system=true

- user: name=repository-manager
        generate_ssh_key=yes
        group=repository-manager
        system=yes
        shell=/bin/bash

- file: path={{repositories_path}}
        owner=repository-manager
        group=repository-manager
        state=directory
        recurse=yes
        mode=0755
  changed_when: false

### Attachments ###############################################################

- group:  name=storage-manager
          system=true

- user: name=storage-manager
        generate_ssh_key=yes
        group=storage-manager
        system=yes
        shell=/bin/bash

- file: path={{trial_attachments_path}}
        owner=storage-manager
        group=storage-manager
        state=directory
        recurse=yes
        mode=0755
  changed_when: false

- file: path={{tree_attachments_path}}
        owner=storage-manager
        group=storage-manager
        state=directory
        recurse=yes
        mode=0755
  changed_when: false




### Database ##################################################################

- name: Create postgresql user
  postgresql_user:  name={{database.user}}
                    password={{database.password}}
                    login_user=root
                    port={{database.port}}

- name: Create database
  postgresql_db:  name={{database.name}}
                  owner={{database.user}}
                  login_user=root
                  port={{database.port}}

- postgresql_privs: >
    login_user=root
    port={{database.port}}
    db={{database.name}}
    privs=ALL
    type=database
    role={{database.user}}
